@page "/play/{GameId}"
@using Shared.Cards
@using Shared.Model

@code
{
    [Parameter] public string? GameId { get; set; }
}

<div class="-mx-[0.8rem] -mt-[0.8rem] flex items-center justify-end sm:-mx-0 sm:-mt-0">
    <img src="img/menu.svg" class="h-4 w-4 cursor-pointer" @onclick="ToggleMenuAsync" />
</div>

<div class="mx-auto mt-5 flex max-w-2xl flex-col items-center">

    <div class="mb-6 flex items-center justify-center gap-5">
        @if (_player != null)
        {
            <GameCharacter Player="_player" Size="large" />
        }
        <div class="flex flex-col items-center gap-2">
            <h1>Mexican Standoff</h1>
            <span class="text-lg uppercase">@_player?.Name</span>
        </div>
    </div>

    @if (_initializing)
    {
        <div class="mt-10 flex flex-col items-center gap-6 text-lg">
            Initializing game&hellip;
            <WaitingAnimation />
        </div>
    }
    else if (_showMenu)
    {
        <div class="flex flex-col items-center gap-5 rounded-lg border-2 border-amber-600 bg-white px-10 py-6 shadow-xl">
            @if (_game != null && _player != null)
            {
                <div class="uppercase">
                    Game ID: @_game.Id
                </div>
                <div>
                    <PlayerHealth Player="_player" Rules="_game.Rules" />
                    <PlayerCoins Player="_player" />
                    <PlayerBullets Player="_player" />
                </div>
                @if (_player.SuccessTrend(1).Any())
                {
                    <div>
                        Action trend: <PlayerTrend Player="@_player" />
                    </div>
                }

                <button class="button in-menu mt-5" @onclick="MaybeQuit">Quit game</button>
                <ConfirmDialog @ref="_confirmDialog" />
            }
            else
            {
                <button class="button in-menu" @onclick='() => NavigationManager.NavigateTo("/")'>To start page</button>
            }
        </div>
        <button class="button neutral in-menu mt-6" @onclick="HideMenuAsync">✖️ Close menu</button>
    }
    else if (_game == null)
    {
        <ErrorBox>
            Sad story.
            <br /><br />Gremlins devoured that game.
        </ErrorBox>
        <a href="/" class="button mt-8">&lt; Quit</a>
    }
    else if (_gameIsFull)
    {
        <ErrorBox>
            Dang!
            <br /><br />Some gremlin seem to have taken the last seat in the game.
        </ErrorBox>
        <a href="/" class="button mt-8">To start page</a>
    }
    else if (_gameHasStartedAlready)
    {
        <ErrorBox>
            Just missed it!
            <br /><br />The game have started&hellip;
        </ErrorBox>
        <a href="/" class="button mt-8">To start page</a>
    }
    else if (_player == null || _playerNameInfo != null)
    {
        <h2 class="mt-5 uppercase">Game ID: @_game.Id</h2>

        <div class="mt-10 flex flex-col items-center gap-3 rounded-lg bg-white p-5 shadow-lg">
            Your nickname
            <input type="text" @bind="@_playerName" size="15" maxlength="@MaxPlayerNameLength" class="text-center" />
            <img src="img/randomize.svg" class="w-[30px] cursor-pointer" title="Generate another nickname" @onclick="RandomizeNickname" />
        </div>
        <button class="button large mt-10" @onclick="JoinGameAsync">Join the game!</button>
        <div class="mt-10">@_playerNameInfo</div>

    }
    else if (_game.State == GameState.Created)
    {
        <div class="mt-6 text-lg">Joining game <span class="uppercase">@_game.Id</span>.</div>
        <div class="mt-3">Players so far:</div>
        <div class="mt-3 flex flex-col items-center rounded-lg bg-white p-5 shadow-lg">
            <div class="flex flex-col items-center gap-3">
                @foreach (var player in _game.Players)
                {
                    <div class="flex w-full gap-5">
                        <GameCharacter Player="player" Size="small" />
                        <span>
                            @player.Name
                            @(_player.Id == player.Id ? "(YOU)" : "")
                        </span>
                    </div>
                }
            </div>
        </div>

        <div class="mt-10 text-lg"><em>Waiting for the game to start&hellip;</em></div>
        <div class="mt-5"><WaitingAnimation /></div>

        @* <a href="/" class="button neutral mt-8" @onclick="Quit">&lt; Quit</a> *@
    }
    else if (_game.State is GameState.Playing || _lastRevealDone == false)
    {
        @* TODO: make QUIT a new Player state *@
        if (_waitingForMonitor)
        {
            <div class="mt-10 rounded-lg bg-white p-5 shadow-lg">
                Watch the monitor for round results!
            </div>
        }
        else if (!_player.Alive)
        {
            <div class="mt-10 text-3xl">
                You are
                <PlayerHealth Player="_player" Rules="_game.Rules" />
            </div>
        }
        else
        {
            <h2 class="mt-4">Select a card to play in round @_game.Rounds:</h2>

            <div class="mt-10 flex flex-col gap-5">
                <div class="selectable-cards">

                    @foreach (var card in _game.PlayableCards(_player))
                    {
                        <div @onclick="() => CardClicked(card)" class="selectable-card @(IsSelected(card) ? "selected" : "")">
                            <div class="card-name">@card.Name</div>
                            @switch (card.Type)
                            {
                                case CardType.Dodge:
                                    <i class="dodge card-size"></i>
                                    break;
                                case CardType.Load:
                                    <i class="bullet card-size"></i>
                                    break;
                                case CardType.Chest:
                                    <i class="chest card-size"></i>
                                    break;
                                case CardType.Attack:
                                    var targetPlayer = _game.Players.FirstOrDefault(p => p.Character.Id == ((AttackCard)card).Target.Id);
                                    var longestPart = targetPlayer?.Name.Split(' ').OrderByDescending(n => n.Length).FirstOrDefault();
                                    <GameCharacter Player="@targetPlayer" Size="medium" />
                                    <div class="target @(longestPart?.Length > 10 ? "long-name" : "")">@targetPlayer?.Name</div>
                                    break;
                            }
                        </div>
                    }
                </div>

                @if (_player.SelectedCard != null)
                {
                    <button class="button neutral" @onclick="() => CardClicked(null)">De-select</button>
                }
            </div>

            @if (_secondsLeft != 0)
            {
                <div class="mt-10 text-2xl font-thin">Time left: @_secondsLeft s</div>
            }
        }
    }
    else if (_game.State is GameState.Ended)
    {
        <div class="mt-6">
            <img src="img/signature-villans.png" class="max-w-[100px]" />
        </div>

        <div class="mt-10 flex flex-col items-center rounded-lg bg-white p-5 text-lg">
            <h2 class="text-xl font-semibold uppercase">Game over</h2>

            @if (_player.Winner)
            {
                <div class="my-5 text-lg">You win!</div>
                <span class="text-5xl">🏆</span>
            }
            else if (_game.Winners.Count == 0)
            {
                <div class="mt-5 text-lg"><em>There is no winner&hellip;</em></div>
            }
            else
            {
                <div class="mt-5 text-xl">
                    Winner is @string.Join(", ", _game.Winners.Select(w => w.Name))
                </div>
            }
            @if (!_player.Alive)
            {
                <div class="mt-10">
                    You are
                    <PlayerHealth Player="_player" Rules="_game.Rules" />
                </div>
            }
        </div>

        @* <button class="button mt-10" @onclick="TryRejoin">Rejoin</button>

        @if (_rejoinStatus != null)
        {
            <div class="appear mt-5 text-center">@_rejoinStatus</div>
        } *@
    }
    else
    {
        <div>
            What now? (error) <br />
            Game state: @_game.State<br />
            Player: @_player?.Id
        </div>
    }

</div>
