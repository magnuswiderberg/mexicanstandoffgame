@using Game.Bots
@using Game.Logic
@using Microsoft.AspNetCore.SignalR.Client
@using Shared.Model

@code
{
    [Parameter] public Game Game { get; set; } = null!;
    [Parameter] public HubConnection HubConnection { get; set; } = null!;
}

<div class="relative mx-auto flex flex-col items-center">

    <div class="relative mt-10 flex flex-col items-center rounded-xl bg-white p-4 shadow-lg">
        <h2 class="border-b border-neutral-300 px-4 pb-1">
            Round @Game.Rounds
            @if (Game.State is GameState.Ended)
            {
                <span> &ndash; Game over</span>
            }
        </h2>
        <h2>
            @Game.Rules.CoinsToWin @(Game.Rules.CoinsToWin == 1 ? "coin" : "coins") to win,
            max @Game.Rules.ChestsPerPlayerCount[Game.Players.Count] on chest,
            max @Game.Rules.MaxBullets bullets in gun
        </h2>

        @if (_tutorialStep == 1)
        {
            <GameMonitorTutorial Step="1" Direction="left" PositionClasses="-top-[11rem] left-[17rem] w-[18rem]"
                                 Text="This info box shows game rules and game state"
                                 ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
        }
    </div>

    @if (_revealingRoundResultIndex is not null && _revealingRoundResultIndex < _aggregatedRoundResult.Count)
    {
        var result = _aggregatedRoundResult[_revealingRoundResultIndex.Value];
        <div class="relative my-10 flex items-center gap-5 rounded-xl bg-white p-10 @_appearClassName">

            @if (_tutorialStep == 7)
            {
                <GameMonitorTutorial Step="7" Direction="left" PositionClasses="-right-[17rem] -top-[12rem] w-[18rem]"
                                     Text="The ACTIONS that each player selected are revealed."
                                     ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
            }
            @if (_tutorialStep == 8)
            {
                <GameMonitorTutorial Step="8" Direction="left" PositionClasses="-bottom-[1rem] left-[23rem] w-[18rem]"
                                     Text="Click this button to show all player's selected actions, until all are shown. That concludes the mini-tutorial!"
                                     ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
            }

            @if (result.Attackers != null)
            {
                <div class="flex flex-col gap-2">
                    @foreach (var attacker in result.Attackers)
                    {
                        <div class="flex items-center gap-2">
                            <GameCharacter Player="@attacker" />
                            <span class="uppercase">@attacker.Name</span>
                        </div>
                    }
                </div>
                <div>
                    @(result.Attackers.Count > 1 ? "all attack" : "attacks")
                </div>
            }

            <div class="flex flex-col gap-2">
                @foreach (var player in result.TargetPlayers)
                {
                    <div class="flex items-center gap-2">
                        <GameCharacter Player="@player" Size="large" />
                        <span class="text-xl uppercase">@player.Name</span>
                    </div>
                }
            </div>

            @switch (result.Type)
            {
                case RoundActionType.Dodge:
                    <text>@(result.TargetPlayers.Count == 1 ? "dodges" : "dodge")</text>
                    <i class="dodge card-size"></i>
                    break;
                case RoundActionType.Chest:
                    <text>@(result.Successful ? $"{(result.TargetPlayers.Count == 1 ? "goes" : "go")} to chest" : "missed the chest")</text>
                    <i class="chest card-size"></i>
                    break;
                case RoundActionType.Load:
                    <text>@(result.TargetPlayers.Count == 1 ? "loads" : "load") the gun</text>
                    <i class="bullet card-size"></i>
                    break;
            }

            @* TODO: End - maybe show more than "Good work"? *@
            @* TODO: Remember all winners? Show them when a game ends *@

            @* TODO: If money was distributed, show it *@
            @* TODO: From chest: some animation or at least show a big coin *@
            @* TODO: From shooting: some animation or at least show a big coin(s) for each player *@
        </div>

        <button class="button" @onclick="RevealNextAsync">@RevealNextText()</button>
    }
    else
    {
        <div class="relative">
            @if (_tutorialStep == 2)
            {
                <GameMonitorTutorial Step="2" Direction="right" PositionClasses="-left-[17rem] bottom-[16rem] w-[18rem]"
                                     Text="There is one row for each player."
                                     ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
            }
            @if (_tutorialStep == 3)
            {
                <GameMonitorTutorial Step="3" Direction="right" PositionClasses="-left-[17rem] bottom-[16rem] w-[18rem]"
                                     Text="LIFE shows life counters left for a player. When it reaches 0, the players is out of the game."
                                     ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
            }
            @if (_tutorialStep == 4)
            {
                var text = $"GOLD show how many coins a player has at the moment. The goal is to reach {Game.Rules.CoinsToWin} coins to win.";
                <GameMonitorTutorial Step="4" Direction="right" PositionClasses="-left-[17rem] bottom-[16rem] w-[18rem]"
                                     Text=@text
                                     ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
            }
            @if (_tutorialStep == 5)
            {
                <GameMonitorTutorial Step="5" Direction="right" PositionClasses="-left-[17rem] bottom-[16rem] w-[18rem]"
                                     Text="BULLETS show how many bullets a player has in the gun. When the gun is loaded, shots can be fired on the opponents."
                                     ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
            }
            @if (_tutorialStep == 6)
            {
                <GameMonitorTutorial Step="6" Direction="right" PositionClasses="-left-[17rem] bottom-[16rem] w-[18rem]"
                                     Text="When a player has selected a card to play, the READY marker will turn to ✔️. ALL players selects a card now!"
                                     ChangeStepAction="ChangeTutorialStep" EndAction="EndTutorial" />
            }

            <div class="mt-10 flex flex-col items-center rounded-xl bg-white p-4 text-sm shadow-lg md:text-lg lg:text-xl">
                <table id="game-monitor-game-state">
                    <thead>
                        <tr>
                            <th class="text-left">Player</th>
                            <th>Life</th>
                            <th>Gold</th>
                            <th>Bullets</th>
                            @if (Game.State == GameState.Playing)
                            {
                                @* <th>Trend</th> *@
                                <th>Ready?</th>
                            }
                            @if (Game.State == GameState.Ended)
                            {
                                <th>Result</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var player in Game.Players)
                        {
                            <tr class="@(player.Winner ? "winner" : "")">
                                <td class="flex items-center justify-start gap-3 @(player.Alive ? "" : "line-through")" @ondblclick="async () => await RemovePlayerAsync(player)">

                                    <GameCharacter Player="@player" />

                                    <span class="uppercase">
                                        @player.Name
                                        @if (player is BotPlayer)
                                        {
                                            <br />
                                            <span>(bot)</span>
                                        }
                                    </span>
                                </td>

                                <td><PlayerHealth Player="player" Rules="Game.Rules" /></td>
                                <td><PlayerCoins Player="player" /></td>
                                <td><PlayerBullets Player="player" /></td>

                                @if (Game.State == GameState.Playing)
                                {
                                    @* <td><PlayerTrend Player="@player" /></td> *@
                                    <td>
                                        @if (player.Alive)
                                        {
                                            @if (player.SelectedCard == null)
                                            {
                                                <WaitingAnimation />
                                            }
                                            else
                                            {
                                                <span>✔️</span>
                                            }
                                        }
                                    </td>
                                }
                                else if (Game.State == GameState.Ended)
                                {
                                    <td class="relative">
                                        @if (player.Winner)
                                        {
                                            <span class="text-3xl">🏆</span>
                                            <blockquote class="absolute -right-[13rem] bottom-[5rem] hidden md:block">
                                                <div class="bubble left comic text-3xl">
                                                    Good<br />work!
                                                </div>
                                            </blockquote>
                                        }
                                        else if (Game.Winners.Count == 0)
                                        {
                                            <i class="text-sm">No winner&hellip;</i>
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <ConfirmDialog @ref="_confirmDialog" />
    }

    <div class="hidden">
        <audio id="sound-coin" src="/sound/coin.mp3" preload="auto"></audio>
        <audio id="sound-dodge" src="/sound/dodge.mp3" preload="auto"></audio>
        <audio id="sound-grunt" src="/sound/grunt.mp3" preload="auto"></audio>
        <audio id="sound-load" src="/sound/load.mp3" preload="auto"></audio>
        <audio id="sound-missed-chest" src="/sound/missed-chest.mp3" preload="auto"></audio>
        <audio id="sound-shot" src="/sound/shot.mp3" preload="auto"></audio>
    </div>
</div>

@if (_tutorialStep == null && Game.State == GameState.Playing)
{
    <div class="fixed bottom-3">
        <a @onclick="ActivateTutorial" class="cursor-pointer">Tutorial</a>
    </div>
}
